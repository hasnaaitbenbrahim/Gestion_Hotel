/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Forms;

import Entities.Chambre;
import Entities.Client;
import Service.ChambreService;
import Service.ClientService;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Service.ReservationService;
import java.util.ArrayList;

/**
 *
 * @author hasna
 */
public class ChambreDates extends javax.swing.JInternalFrame {
        private ChambreService chambreService;
        private ClientService clientservice;
    /**
     * Creates new form ChambreDates
     */
    public ChambreDates() {
        initComponents();
        clientservice = new ClientService(); // Initialize the service
        chambreService = new ChambreService(); // Initialize the ChambreService
        loadClients();
        
    }
    
     private void loadClients(){
       for(Client c:clientservice.findAll()) {
           clients.addItem(c);
       }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        clients = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        findchambreDates = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Rooms = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel1.setText("Trouvé les chambres réservées entre deux dates");

        clients.setBackground(new java.awt.Color(204, 204, 255));
        clients.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientsActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel2.setText("Client");

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel3.setText("Date debut");

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel4.setText("Date fin");

        findchambreDates.setBackground(new java.awt.Color(153, 153, 255));
        findchambreDates.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        findchambreDates.setForeground(new java.awt.Color(255, 255, 255));
        findchambreDates.setText("Find Chambre");
        findchambreDates.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findchambreDatesActionPerformed(evt);
            }
        });

        Rooms.setBackground(new java.awt.Color(204, 204, 255));
        Rooms.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Telephone", "Categorie"
            }
        ));
        Rooms.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RoomsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Rooms);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(31, 31, 31)
                        .addComponent(clients, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(findchambreDates)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 587, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(clients, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(23, 23, 23)
                        .addComponent(findchambreDates, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3))
                .addGap(40, 40, 40)
                .addComponent(jLabel4)
                .addGap(55, 55, 55)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clientsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientsActionPerformed
        
    }//GEN-LAST:event_clientsActionPerformed

    private void findchambreDatesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findchambreDatesActionPerformed
            
        Client selectedClient = (Client) clients.getSelectedItem();
        Date dateDebut = datedebut.getDate();
        Date dateFin = datefin.getDate();
         if (dateDebut == null || dateFin == null || selectedClient == null) {
            JOptionPane.showMessageDialog(this, "Please select a client and valid dates.");
            return;
        }
System.out.println("Client ID: " + selectedClient.getId());
System.out.println("Start Date: " + dateDebut);
System.out.println("End Date: " + dateFin);

        // Call the method to find chambres between the dates
        List<Chambre> chambres = findChambreBetweenDates(selectedClient, dateDebut, dateFin);

         DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID");
        model.addColumn("Téléphone");
        model.addColumn("Catégorie");

        // Add rooms to the table model
        for (Chambre chambre : chambres) {
            model.addRow(new Object[] {
                chambre.getId(),
                chambre.getTelephone(),
                chambre.getCat().getLibelle()
            });
        }
        Rooms.setModel(model);
        

    }//GEN-LAST:event_findchambreDatesActionPerformed

    private void RoomsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RoomsMouseClicked
        
    }//GEN-LAST:event_RoomsMouseClicked

    private List<Chambre> findChambreBetweenDates(Client client, Date dateDebut, Date dateFin) {
        if (client == null) {
            System.out.println("Error: Client is null");
            return new ArrayList<>();
        }
        
        ReservationService reservationService = new ReservationService();
        try {
            // Pass the entire client object to the service method
            return reservationService.findChambresByClientAndDates(client, dateDebut, dateFin);
        } catch (Exception e) {
            System.out.println("Error finding chambres: " + e.getMessage());
            e.printStackTrace();
            return new ArrayList<>();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Rooms;
    private javax.swing.JComboBox clients;
    private javax.swing.JButton findchambreDates;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
